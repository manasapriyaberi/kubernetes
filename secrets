Secrets:
Kubernetes Secrets let you store and manage sensitive information, such as passwords, OAuth tokens, and ssh keys. 
Storing confidential information in a Secret is safer and more flexible than putting it verbatim in a Pod definition or in a container image. 
See Secrets design document for more information.

A Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. 
Such information might otherwise be put in a Pod specification or in an image. Users can create Secrets and the system also creates some Secrets.

apiVersion: v1
kind: Secret
metadata:
  name: mysql-password
data:
 # You can include additional key value pairs as you do with Opaque Secrets
  mysql-dbpassword: DEVOPS12345
  
  Rather using plaintext as DEVOPS12345 we can convert as encrypted text to base64, by following command
  echo -n "DEVOPS12345" | base64 will convert into some text copy the text and paste it
  change  password environmental  variable in deployment yaml file as
   - name:WORDPRESS_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-password
            key: mysql-dbpassword
 IF WE loss any yaml files after we applied to cluster we can get it  by running this command
 kubectl get secrets mysql-password -o yaml it will print the yaml file ,copy it and save 
